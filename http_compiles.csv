117243	"Tuple{typeof(Base.MainInclude.include), String}"
171326	"Tuple{typeof(Base.include), Module, String}"
216328	"Tuple{typeof(InstagramScraper.include), String}"
335544	"Tuple{getfield(Base, Symbol("##open#310")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, getfield(Base, Symbol("##651#652")){String}, String}"
307517	"Tuple{getfield(Base, Symbol("##open#310")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, getfield(Base, Symbol("##657#658")){String, Base.PkgId}, String}"
1120719	"Tuple{getfield(Base, Symbol("##open#309")), Bool, Nothing, Nothing, Nothing, Nothing, Function, String}"
553057	"Tuple{getfield(Base, Symbol("##read#314")), Bool, Function, Base.IOStream, Int32}"
454367	"Tuple{getfield(Base, Symbol("##open#310")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, getfield(Base, Symbol("##655#656")){String, Base.UUID, String}, String}"
538845	"Tuple{typeof(Base.isassigned), Core.SimpleVector, Int64}"
510818	"Tuple{typeof(MbedTLS.f_send), Ptr{Nothing}, Ptr{UInt8}, UInt64}"
339097	"Tuple{typeof(MbedTLS.f_recv), Ptr{Nothing}, Ptr{UInt8}, UInt64}"
157904	"Tuple{typeof(MbedTLS.__init__)}"
207248	"Tuple{typeof(HTTP.URIs.__init__)}"
173299	"Tuple{typeof(HTTP.Parsers.__init__)}"
298042	"Tuple{typeof(Base.isassigned), Core.SimpleVector, Int64}"
291332	"Tuple{typeof(Base.isassigned), Core.SimpleVector, Int64}"
138165	"Tuple{getfield(Cascadia, Symbol("#@sel_str")), LineNumberNode, Module, AbstractString}"
5128306	"Tuple{typeof(Cascadia.skipWhitespace), Cascadia.Parser}"
2092614	"Tuple{typeof(Cascadia.parseError), Cascadia.Parser, String}"
7407642	"Tuple{typeof(Base.string), String, Char, String}"
1698645	"Tuple{typeof(Cascadia.nameChar), Char}"
9948307	"Tuple{typeof(Cascadia.parseEscape), Cascadia.Parser}"
439760	"Tuple{typeof(Cascadia.parseName), Cascadia.Parser}"
207643	"Tuple{typeof(Cascadia.attributeSelector), getfield(Cascadia, Symbol("##11#12")){String}, String}"
84479	"Tuple{typeof(Cascadia.parseIDSelector), Cascadia.Parser}"
2177092	"Tuple{typeof(Cascadia.nameStart), Char}"
182773	"Tuple{typeof(Cascadia.parseIdentifier), Cascadia.Parser}"
443314	"Tuple{typeof(Cascadia.attributeSelector), getfield(Cascadia, Symbol("##13#14")){String}, String}"
160272	"Tuple{typeof(Cascadia.parseClassSelector), Cascadia.Parser}"
5773736	"Tuple{typeof(Cascadia.attributeSelector), getfield(Cascadia, Symbol("##9#10")), String}"
5337529	"Tuple{typeof(Cascadia.parseRegex), Cascadia.Parser}"
2318810	"Tuple{typeof(Cascadia.attributeSelector), getfield(Cascadia, Symbol("##15#16")){String}, String}"
720434	"Tuple{typeof(Cascadia.attributeSelector), getfield(Cascadia, Symbol("##17#18")){String}, String}"
805702	"Tuple{typeof(Cascadia.attributeSelector), getfield(Cascadia, Symbol("##19#20")){String}, String}"
747673	"Tuple{typeof(Cascadia.attributeSelector), getfield(Cascadia, Symbol("##21#22")){String}, String}"
749646	"Tuple{typeof(Cascadia.attributeSelector), getfield(Cascadia, Symbol("##23#24")){String, Base.Regex}, String}"
11898413	"Tuple{typeof(Base.string), String, String, String}"
3111880	"Tuple{typeof(Cascadia.parseString), Cascadia.Parser}"
920182	"Tuple{typeof(Cascadia.parseAttributeSelector), Cascadia.Parser}"
3402028	"Tuple{typeof(Cascadia.consumeParenthesis), Cascadia.Parser}"
560162	"Tuple{typeof(Cascadia.consumeClosingParenthesis), Cascadia.Parser}"
9401961	"Tuple{typeof(Cascadia.parseInteger), Cascadia.Parser}"
2908580	"Tuple{typeof(Cascadia.parseNth), Cascadia.Parser}"
2246965	"Tuple{typeof(Cascadia.parsePseudoclassSelector), Cascadia.Parser}"
266461	"Tuple{typeof(Cascadia.typeSelector), String}"
156720	"Tuple{typeof(Cascadia.parseSimpleSelectorSequence), Cascadia.Parser}"
1107692	"Tuple{typeof(Cascadia.parseSelector), Cascadia.Parser}"
337123	"Tuple{typeof(Cascadia.parseSelectorGroup), Cascadia.Parser}"
80136	"Tuple{Type{Cascadia.Selector}, String}"
160667	"Tuple{getfield(Base, Symbol("#@time")), LineNumberNode, Module, Any}"
110927	"Tuple{getfield(Base, Symbol("#@ccallable")), LineNumberNode, Module, Any}"
444498	"Tuple{typeof(Base.expand_ccallable), Nothing, Expr}"
94742	"Tuple{Type{Base.Generator{I, F} where F where I}, getfield(Base, Symbol("##264#265")), Array{Any, 1}}"
522660	"Tuple{typeof(Base._collect), Array{Any, 1}, Base.Generator{Array{Any, 1}, getfield(Base, Symbol("##264#265"))}, Base.EltypeUnknown, Base.HasShape{1}}"
54872	"Tuple{typeof(Base.collect_similar), Array{Any, 1}, Base.Generator{Array{Any, 1}, getfield(Base, Symbol("##264#265"))}}"
158693	"Tuple{getfield(Base, Symbol("##264#265")), Expr}"
195405	"Tuple{typeof(Base._similar_for), Array{Any, 1}, Type{Expr}, Base.Generator{Array{Any, 1}, getfield(Base, Symbol("##264#265"))}, Base.HasShape{1}}"
464236	"Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Array{Any, 1}, getfield(Base, Symbol("##264#265"))}, Int64, Int64}"
39870	"Tuple{typeof(Base.collect_to_with_first!), Array{Expr, 1}, Expr, Base.Generator{Array{Any, 1}, getfield(Base, Symbol("##264#265"))}, Int64}"
138560	"Tuple{typeof(Base.map), Function, Array{Expr, 1}}"
106980	"Tuple{Type{Base.Generator{I, F} where F where I}, typeof(Base.esc), Array{Expr, 1}}"
2360260	"Tuple{typeof(Base.collect_to!), Array{Expr, 1}, Base.Generator{Array{Expr, 1}, typeof(Base.esc)}, Int64, Int64}"
80531	"Tuple{typeof(Base._collect), Array{Expr, 1}, Base.Generator{Array{Expr, 1}, typeof(Base.esc)}, Base.EltypeUnknown, Base.HasShape{1}}"
41844	"Tuple{typeof(Base.collect_similar), Array{Expr, 1}, Base.Generator{Array{Expr, 1}, typeof(Base.esc)}}"
580295	"Tuple{typeof(Base.ccallable), Function, Type{T} where T, Type{T} where T, String}"
1121114	"Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
185141	"Tuple{getfield(Dates, Symbol("##s623#30")), Any, Any, Any, Any, Any}"
2464477	"Tuple{getfield(Base.Cartesian, Symbol("#@nexprs")), LineNumberNode, Module, Int64, Expr}"
1886550	"Tuple{typeof(Base.Cartesian.exprresolve_arith), Expr}"
1012950	"Tuple{typeof(Base.Cartesian.exprresolve_conditional), Expr}"
367125	"Tuple{typeof(Base.Cartesian.exprresolve), Expr}"
54477	"Tuple{typeof(Base.Cartesian.inlineanonymous), Expr, Int64}"
1805230	"Tuple{typeof(Base.Cartesian.lreplace!), Expr, Base.Cartesian.LReplace{String}}"
129481	"Tuple{typeof(Base.Cartesian.lreplace), Expr, Symbol, Int64}"
607928	"Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Function}, Symbol}"
33555	"Tuple{typeof(Base.haskey), Base.Dict{Symbol, Function}, Symbol}"
1005450	"Tuple{typeof(Base.Filesystem.cd), String}"
1420340	"Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{InstagramScraper.InstagramProfile, 1}, Base.IndexLinear, Array{Any, 1}}"
2739229	"Tuple{typeof(Base.time_print), UInt64, Int64, Int64, Int64}"
229355	"Tuple{typeof(Base.show), InstagramScraper.InstagramProfile}"
181588	"Tuple{typeof(InstagramScraper.get_multiple_followers), Array{String, 1}, Bool}"
69083	"Tuple{typeof(InstagramScraper.julia_main), Array{String, 1}}"
169746	"Tuple{typeof(Base.occursin), String, String}"
4156806	"Tuple{typeof(Base.uv_write_async), Base.TTY, Ptr{UInt8}, UInt64}"
208038	"Tuple{typeof(Base.uv_write), Base.TTY, Ptr{UInt8}, UInt64}"
344229	"Tuple{typeof(Base.unsafe_write), Base.TTY, Ptr{UInt8}, UInt64}"
30791	"Tuple{typeof(Base.unsafe_write), Base.TTY, Base.RefValue{UInt8}, Int64}"
50529	"Tuple{typeof(Base.write), Base.TTY, UInt8}"
373836	"Tuple{typeof(Base.print), Base.TTY, String, Char}"
26844	"Tuple{typeof(Base.println), Base.TTY, String}"
189879	"Tuple{typeof(Base.print), Base.TTY, String}"
269620	"Tuple{getfield(Test, Symbol("#@testset")), LineNumberNode, Module, Vararg{Any, N} where N}"
1694697	"Tuple{typeof(Test.testset_beginend), Tuple{String, Expr}, Expr, LineNumberNode}"
221854	"Tuple{typeof(Test.parse_testset_args), Tuple{String}}"
941499	"Tuple{getfield(Test, Symbol("#@test")), LineNumberNode, Module, Any, Vararg{Any, N} where N}"
119217	"Tuple{typeof(Test.test_expr!), String, Expr}"
1552585	"Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, typeof(Base.esc)}}"
600427	"Tuple{typeof(Base.collect), Base.Generator{Array{Any, 1}, Type{QuoteNode}}}"
1745227	"Tuple{typeof(Test.get_test_result), Expr, LineNumberNode}"
432260	"Tuple{typeof(Base.first), String}"
315412	"Tuple{typeof(Test.get_testset_depth)}"
99084	"Tuple{typeof(Base.length), Array{Test.AbstractTestSet, 1}}"
607138	"Tuple{typeof(Test._check_testset), Type{T} where T, Expr}"
928867	"Tuple{typeof(Base.merge), NamedTuple{(), Tuple{}}, Base.Dict{Symbol, Any}}"
165799	"Tuple{Type{Test.DefaultTestSet}, String}"
726750	"Tuple{typeof(Test.push_testset), Test.DefaultTestSet}"
275936	"Tuple{typeof(Base.push!), Array{Test.AbstractTestSet, 1}, Test.DefaultTestSet}"
293700	"Tuple{typeof(Base.copy), Random.MersenneTwister}"
91584	"Tuple{typeof(Random.seed!), Array{UInt32, 1}}"
1686013	"Tuple{typeof(Test.eval_test), Expr, Expr, LineNumberNode}"
136192	"Tuple{typeof(Base.:(==)), Int32, Int64}"
692012	"Tuple{typeof(Test.get_testset)}"
117638	"Tuple{typeof(Test.do_test), Test.Returned, Expr}"
181984	"Tuple{typeof(Base.isempty), Array{Test.AbstractTestSet, 1}}"
198959	"Tuple{typeof(Base.lastindex), Array{Test.AbstractTestSet, 1}}"
123954	"Tuple{typeof(Base.getindex), Array{Test.AbstractTestSet, 1}, Int64}"
1362312	"Tuple{typeof(Base.copyto!), Array{Int32, 1}, Int64, Array{Int32, 1}, Int64, Int64}"
1639826	"Tuple{typeof(Base.copyto!), Array{Float64, 1}, Int64, Array{Float64, 1}, Int64, Int64}"
808070	"Tuple{typeof(Base.copyto!), Array{UInt128, 1}, Int64, Array{UInt128, 1}, Int64, Int64}"
374626	"Tuple{typeof(Base.copy!), Random.MersenneTwister, Random.MersenneTwister}"
557399	"Tuple{typeof(Test.pop_testset)}"
341466	"Tuple{typeof(Base.pop!), Array{Test.AbstractTestSet, 1}}"
436208	"Tuple{typeof(Test.record), Test.DefaultTestSet, Test.DefaultTestSet}"
489106	"Tuple{typeof(Test.get_test_counts), Test.DefaultTestSet}"
1283754	"Tuple{typeof(Base.lpad), String, Int64, String}"
268041	"Tuple{typeof(Base.warn_color)}"
112506	"Tuple{typeof(Base.info_color)}"
271989	"Tuple{typeof(Test.print_test_results), Test.DefaultTestSet, Int64}"
1219014	"Tuple{typeof(Base.copyto!), Array{Any, 1}, Int64, Array{Test.Error, 1}, Int64, Int64}"
680958	"Tuple{typeof(Base.copyto!), Array{Any, 1}, Int64, Array{Test.Fail, 1}, Int64, Int64}"
89215	"Tuple{typeof(Test.filter_errors), Test.DefaultTestSet}"
470158	"Tuple{typeof(Base.copyto!), Base.IndexLinear, Array{Union{Test.Error, Test.Fail}, 1}, Base.IndexLinear, Array{Any, 1}}"
71846	"Tuple{typeof(Test.finish), Test.DefaultTestSet}"
260541	"Tuple{typeof(Test.get_alignment), Test.DefaultTestSet, Int64}"
172114	"Tuple{getfield(Base, Symbol("##printstyled#673")), Bool, Symbol, Function, String, Vararg{String, N} where N}"
236461	"Tuple{getfield(Base, Symbol("#kw##printstyled")), NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}, typeof(Base.printstyled), Base.TTY, String, Vararg{String, N} where N}"
173693	"Tuple{getfield(Base, Symbol("##printstyled#672")), Bool, Symbol, Function, Base.TTY, String, Vararg{String, N} where N}"
214748	"Tuple{getfield(Base, Symbol("#kw##with_output_color")), NamedTuple{(:bold,), Tuple{Bool}}, typeof(Base.with_output_color), Function, Symbol, Base.TTY, String, Vararg{String, N} where N}"
1485081	"Tuple{getfield(Base, Symbol("##with_output_color#671")), Bool, Function, Function, Symbol, Base.TTY, String, Vararg{String, N} where N}"
652141	"Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, String, String}"
424760	"Tuple{Type{NamedTuple{(:bold, :color), T} where T<:Tuple}, Tuple{Bool, Symbol}}"
354099	"Tuple{getfield(Base, Symbol("#kw##printstyled")), NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}, typeof(Base.printstyled), String}"
342255	"Tuple{typeof(Base.println), Base.TTY}"
698327	"Tuple{typeof(Base.print), String, String}"
634772	"Tuple{typeof(Test.print_counts), Test.DefaultTestSet, Int64, Int64, Int64, Int64, Int64, Int64, Int64}"
622140	"Tuple{typeof(Base.print), Base.TTY, String, String}"
107769	"Tuple{Type{NamedTuple{(:color,), T} where T<:Tuple}, Tuple{Symbol}}"
191063	"Tuple{getfield(Base, Symbol("#kw##printstyled")), NamedTuple{(:color,), Tuple{Symbol}}, typeof(Base.printstyled), String}"
207643	"Tuple{getfield(Test, Symbol("#@test_throws")), LineNumberNode, Module, Any, Any}"
499370	"Tuple{typeof(Base.diff_names), Tuple{Symbol, Symbol}, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}}"
941104	"Tuple{typeof(InstagramScraper.fetch_body), String}"
15354128	"Tuple{typeof(Base.write), Base.GenericIOBuffer{Array{UInt8, 1}}, String, String}"
103293272	"Tuple{typeof(Base.collect_to!), Array{Char, 1}, Base.Generator{Base.CodeUnits{UInt8, String}, Type{Char}}, Int64, Int64}"
215143	"Tuple{typeof(Base.collect), Base.Generator{Base.CodeUnits{UInt8, String}, Type{Char}}}"
453578	"Tuple{typeof(Base.mapfilter), typeof(HTTP.Cookies.validcookievaluebyte), typeof(Base.push!), Array{Char, 1}, Array{Char, 1}}"
14300123	"Tuple{typeof(Base.string), Char, String, Char}"
535687	"Tuple{typeof(HTTP.Cookies.sanitizeCookieValue), String}"
3964953	"Tuple{typeof(Base.write), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Char, String}"
24692927	"Tuple{typeof(HTTP.Cookies.isCookieDomainName), String}"
876759	"Tuple{typeof(Dates.year), Int64}"
2363418	"Tuple{typeof(Dates.dayofweek), Dates.DateTime}"
1983267	"Tuple{typeof(Dates.day), Int64}"
198958	"Tuple{typeof(Dates.format), Base.GenericIOBuffer{Array{UInt8, 1}}, Dates.DatePart{Char(0x64000000)}, Dates.DateTime}"
878732	"Tuple{typeof(Dates.month), Int64}"
167378	"Tuple{typeof(Dates.format), Base.GenericIOBuffer{Array{UInt8, 1}}, Dates.DatePart{Char(0x75000000)}, Dates.DateTime, Dates.DateLocale}"
588584	"Tuple{typeof(Dates.hour), Dates.DateTime}"
639509	"Tuple{typeof(Dates.minute), Dates.DateTime}"
384100	"Tuple{typeof(Dates.second), Dates.DateTime}"
425549	"Tuple{typeof(Dates.format), Base.GenericIOBuffer{Array{UInt8, 1}}, Dates.DateTime, Dates.DateFormat{Symbol("e, dd u yyyy HH:MM:SS"), Tuple{Dates.DatePart{Char(0x65000000)}, Dates.Delim{String, 2}, Dates.DatePart{Char(0x64000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x75000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}}}}"
439761	"Tuple{typeof(Dates.format), Dates.DateTime, Dates.DateFormat{Symbol("e, dd u yyyy HH:MM:SS"), Tuple{Dates.DatePart{Char(0x65000000)}, Dates.Delim{String, 2}, Dates.DatePart{Char(0x64000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x75000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x79000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x48000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x4d000000)}, Dates.Delim{Char, 1}, Dates.DatePart{Char(0x53000000)}}}, Int64}"
1808388	"Tuple{typeof(Base.write), Base.GenericIOBuffer{Array{UInt8, 1}}, String, String, String}"
1179539	"Tuple{typeof(HTTP.Cookies.isIP), String}"
154350	"Tuple{Type{String}, HTTP.Cookies.Cookie, Bool}"
330808	"Tuple{typeof(Base.string), String, Array{HTTP.Cookies.Cookie, 1}, Bool}"
184747	"Tuple{typeof(InstagramScraper.get_followers), String}"
1194145	"Tuple{typeof(HTTP.URIs.group), Int64, Base.Regex, String, Base.SubString{String}}"
596480	"Tuple{typeof(HTTP.URIs.ensurevalid), HTTP.URIs.URI}"
3135171	"Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Base.SubString{String}}"
5366740	"Tuple{typeof(Base.string), String, Base.SubString{String}, String}"
3963374	"Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.SubString{String}, String}"
232908	"Tuple{typeof(HTTP.URIs.formaturi), Base.GenericIOBuffer{Array{UInt8, 1}}, Base.SubString{String}, Base.SubString{String}, Base.SubString{String}, Base.SubString{String}, Base.SubString{String}, Base.SubString{String}, Base.SubString{String}}"
3007269	"Tuple{typeof(Base.StackTraces.lookup), Base.InterpreterIP}"
397522	"Tuple{typeof(HTTP.method_name), Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}}"
214749	"Tuple{typeof(HTTP.postcondition_error), String, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}, String, String, String, String}"
122375	"Tuple{getfield(HTTP.URIs, Symbol("##parse_uri_reference#6")), Bool, Function, String}"
522266	"Tuple{getfield(HTTP, Symbol("##stack#19")), Bool, Bool, Bool, Bool, Bool, Bool, Bool, Int64, Bool, Int64, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(HTTP.stack)}"
84083	"Tuple{getfield(HTTP, Symbol("##request#5")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, String, HTTP.URIs.URI, Array{Base.Pair{Base.SubString{String}, Base.SubString{String}}, 1}, Array{UInt8, 1}}"
1406919	"Tuple{getfield(Base, Symbol("##s72#143")), Any, Any, Any, Any, Any}"
238040	"Tuple{typeof(Base.merge_names), Tuple{Symbol}, Tuple{}}"
362783	"Tuple{typeof(Base.merge_types), Tuple{Symbol}, Type{NamedTuple{(:iofunction,), Tuple{Nothing}}}, Type{NamedTuple{(), Tuple{}}}}"
137771	"Tuple{typeof(Base.sym_in), Symbol, Tuple{}}"
608323	"Tuple{typeof(Base.merge_names), Tuple{Symbol}, Tuple{Symbol}}"
415286	"Tuple{typeof(Base.merge_types), Tuple{Symbol, Symbol}, Type{NamedTuple{(:reuse_limit,), Tuple{Int64}}}, Type{NamedTuple{(:iofunction,), Tuple{Nothing}}}}"
209617	"Tuple{typeof(Base.sym_in), Symbol, Tuple{Symbol}}"
433839	"Tuple{typeof(Base.merge_types), Tuple{Symbol, Symbol}, Type{NamedTuple{(:require_ssl_verification,), Tuple{Bool}}}, Type{NamedTuple{(:iofunction,), Tuple{Nothing}}}}"
330807	"Tuple{typeof(Base._compute_eltype), Type{Tuple{Bool, Nothing}}}"
205669	"Tuple{typeof(Base.diff_names), Tuple{}, Tuple{Symbol, Symbol, Symbol, Symbol}}"
421601	"Tuple{typeof(Base.merge_types), Tuple{Symbol}, Type{NamedTuple{(:parent,), Tuple{HTTP.Messages.Response}}}, Type{NamedTuple{(:parent,), Tuple{HTTP.Messages.Response}}}}"
114875	"Tuple{typeof(HTTP.request), Type{HTTP.RedirectRequest.RedirectLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}}}, String, HTTP.URIs.URI, Array{Base.Pair{Base.SubString{String}, Base.SubString{String}}, 1}, Array{UInt8, 1}}"
682142	"Tuple{typeof(HTTP.URIs.resource), HTTP.URIs.URI}"
1007818	"Tuple{typeof(Base.ht_keyindex), Base.Dict{String, Nothing}, Base.SubString{String}}"
178431	"Tuple{getfield(HTTP.RedirectRequest, Symbol("##2#3")), Base.Pair{Base.SubString{String}, Base.SubString{String}}}"
168957	"Tuple{typeof(Base.mapfilter), getfield(HTTP.RedirectRequest, Symbol("##2#3")), typeof(Base.push!), Array{Base.Pair{Base.SubString{String}, Base.SubString{String}}, 1}, Array{Base.Pair{Base.SubString{String}, Base.SubString{String}}, 1}}"
2693831	"Tuple{typeof(HTTP.Messages.ascii_lc_isequal), Base.SubString{String}, String}"
462262	"Tuple{getfield(HTTP.RedirectRequest, Symbol("##request#1")), Int64, Bool, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, Type{HTTP.RedirectRequest.RedirectLayer{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}}}, String, HTTP.URIs.URI, Array{Base.Pair{Base.SubString{String}, Base.SubString{String}}, 1}, Array{UInt8, 1}}"
1249411	"Tuple{typeof(Base.string), Base.SubString{String}, String, Base.SubString{String}, String, Vararg{Union{Char, Base.SubString{String}, String}, N} where N}"
1556138	"Tuple{Type{Base.SubString{T} where T<:AbstractString}, Base.SubString{String}}"
3858763	"Tuple{typeof(HTTP.Messages.ascii_lc_isequal), Base.SubString{String}, Base.SubString{String}}"
243171	"Tuple{typeof(HTTP.Pairs.setbyfirst), Array{Base.Pair{Base.SubString{String}, Base.SubString{String}}, 1}, Base.Pair{Base.SubString{String}, Base.SubString{String}}, typeof(HTTP.Messages.field_name_isequal)}"
324492	"Tuple{typeof(HTTP.Messages.defaultheader), Array{Base.Pair{Base.SubString{String}, Base.SubString{String}}, 1}, Base.Pair{String, Base.SubString{String}}}"
1648906	"Tuple{typeof(HTTP.Messages.defaultheader), Array{Base.Pair{Base.SubString{String}, Base.SubString{String}}, 1}, Base.Pair{String, String}}"
1549032	"Tuple{typeof(HTTP.Messages.hasheader), Array{Base.Pair{Base.SubString{String}, Base.SubString{String}}, 1}, String}"
1000712	"Tuple{getfield(HTTP.MessageRequest, Symbol("##request#1")), Base.VersionNumber, String, Nothing, Nothing, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}}, String, HTTP.URIs.URI, Array{Base.Pair{Base.SubString{String}, Base.SubString{String}}, 1}, Array{UInt8, 1}}"
2287625	"Tuple{typeof(HTTP.Messages.mkheaders), Array{Any, 1}}"
410548	"Tuple{getfield(HTTP.Messages, Symbol("##Request#3")), Base.VersionNumber, Nothing, Type{T} where T, String, String, Array{Base.Pair{Base.SubString{String}, Base.SubString{String}}, 1}, Array{UInt8, 1}}"
1080059	"Tuple{getfield(Base, Symbol("###48#49#50")){Base.ExponentialBackOff, getfield(HTTP.RetryRequest, Symbol("##2#3")){Bool, HTTP.Messages.Request}, typeof(HTTP.request)}, Base.Iterators.Pairs{Symbol, Nothing, Tuple{Symbol}, NamedTuple{(:iofunction,), Tuple{Nothing}}}, Function, Type{T} where T, Vararg{Any, N} where N}"
458315	"Tuple{getfield(HTTP, Symbol("#kw##request")), NamedTuple{(:iofunction,), Tuple{Nothing}}, typeof(HTTP.request), Type{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}, HTTP.URIs.URI, HTTP.Messages.Request, Array{UInt8, 1}}"
1071374	"Tuple{typeof(HTTP.Messages.defaultheader), HTTP.Messages.Request, Base.Pair{String, String}}"
290542	"Tuple{getfield(HTTP.ConnectionRequest, Symbol("##request#1")), Nothing, Type{T} where T, Int64, Base.Iterators.Pairs{Symbol, Nothing, Tuple{Symbol}, NamedTuple{(:iofunction,), Tuple{Nothing}}}, Function, Type{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}, HTTP.URIs.URI, HTTP.Messages.Request, Array{UInt8, 1}}"
249882	"Tuple{getfield(HTTP.ConnectionPool, Symbol("#kw##getconnection")), NamedTuple{(:reuse_limit, :iofunction), Tuple{Int64, Nothing}}, typeof(HTTP.ConnectionPool.getconnection), Type{HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}, Base.SubString{String}, Base.SubString{String}}"
1130983	"Tuple{typeof(Base.mapfilter), getfield(HTTP.ConnectionPool, Symbol("##6#7")){DataType, Base.SubString{String}, Base.SubString{String}, Int64}, typeof(Base.push!), Array{HTTP.ConnectionPool.Connection{T} where T<:IO, 1}, Array{HTTP.ConnectionPool.Connection{T} where T<:IO, 1}}"
937946	"Tuple{typeof(Base.collect_to!), Array{Bool, 1}, Base.Generator{Array{HTTP.ConnectionPool.Connection{T} where T<:IO, 1}, getfield(HTTP.ConnectionPool, Symbol("#isdeletable#10"))}, Int64, Int64}"
57635	"Tuple{typeof(Base._collect), Array{HTTP.ConnectionPool.Connection{T} where T<:IO, 1}, Base.Generator{Array{HTTP.ConnectionPool.Connection{T} where T<:IO, 1}, getfield(HTTP.ConnectionPool, Symbol("#isdeletable#10"))}, Base.EltypeUnknown, Base.HasShape{1}}"
475684	"Tuple{typeof(Base.deleteat!), Array{HTTP.ConnectionPool.Connection{T} where T<:IO, 1}, Array{Bool, 1}}"
51318	"Tuple{typeof(HTTP.ConnectionPool.purge)}"
403838	"Tuple{typeof(Base.mapfilter), getfield(HTTP.ConnectionPool, Symbol("##4#5")){DataType, Base.SubString{String}, Base.SubString{String}, Int64, Bool, Int64}, typeof(Base.push!), Array{HTTP.ConnectionPool.Connection{T} where T<:IO, 1}, Array{HTTP.ConnectionPool.Connection{T} where T<:IO, 1}}"
574374	"Tuple{typeof(Base.mapfilter), getfield(HTTP.ConnectionPool, Symbol("##12#13")), typeof(Base.push!), Array{HTTP.ConnectionPool.Connection{T} where T<:IO, 1}, Array{HTTP.ConnectionPool.Connection{T} where T<:IO, 1}}"
795438	"Tuple{typeof(Base.mapfilter), getfield(HTTP.ConnectionPool, Symbol("##8#9")){DataType, Base.SubString{String}, Base.SubString{String}, Int64, Bool}, typeof(Base.push!), Array{HTTP.ConnectionPool.Connection{T} where T<:IO, 1}, Array{HTTP.ConnectionPool.Connection{T} where T<:IO, 1}}"
803728	"Tuple{typeof(HTTP.IOExtras.tcpsocket), MbedTLS.SSLContext}"
602006	"Tuple{typeof(HTTP.IOExtras.peerport), MbedTLS.SSLContext}"
926104	"Tuple{typeof(HTTP.IOExtras.localport), MbedTLS.SSLContext}"
654114	"Tuple{Type{HTTP.ConnectionPool.Connection{MbedTLS.SSLContext}}, Base.SubString{String}, Base.SubString{String}, Int64, Int64, Bool, Int64, Int64, MbedTLS.SSLContext, Base.GenericIOBuffer{Array{UInt8, 1}}, Int64, Int64, Bool, Base.Condition, Int64, Bool, Base.Condition, Float64}"
504107	"Tuple{Type{HTTP.ConnectionPool.Connection{MbedTLS.SSLContext}}, Base.SubString{String}, Base.SubString{String}, Int64, Int64, Bool, UInt16, Int64, MbedTLS.SSLContext, Base.GenericIOBuffer{Array{UInt8, 1}}, Int64, Int64, Bool, Base.Condition, Int64, Bool, Base.Condition, Float64}"
438971	"Tuple{Type{HTTP.ConnectionPool.Connection{MbedTLS.SSLContext}}, Base.SubString{String}, Base.SubString{String}, Int64, Int64, Bool, Int64, UInt16, MbedTLS.SSLContext, Base.GenericIOBuffer{Array{UInt8, 1}}, Int64, Int64, Bool, Base.Condition, Int64, Bool, Base.Condition, Float64}"
3897055	"Tuple{Type{HTTP.ConnectionPool.Connection{MbedTLS.SSLContext}}, Base.SubString{String}, Base.SubString{String}, Int64, Int64, Bool, UInt16, UInt16, MbedTLS.SSLContext, Base.GenericIOBuffer{Array{UInt8, 1}}, Int64, Int64, Bool, Base.Condition, Int64, Bool, Base.Condition, Float64}"
103032	"Tuple{Type{HTTP.ConnectionPool.Connection{T} where T<:IO}, Base.SubString{String}, Base.SubString{String}, Int64, Int64, Bool, MbedTLS.SSLContext}"
387653	"Tuple{typeof(HTTP.precondition_error), String, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}}"
226986	"Tuple{typeof(HTTP.postcondition_error), String, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}}"
44213	"Tuple{typeof(HTTP.IOExtras.startwrite), HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}"
335544	"Tuple{getfield(HTTP.ConnectionPool, Symbol("##getconnection#11")), Int64, Int64, Int64, Int64, Bool, Base.Iterators.Pairs{Symbol, Nothing, Tuple{Symbol}, NamedTuple{(:iofunction,), Tuple{Nothing}}}, Function, Type{HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}, Base.SubString{String}, Base.SubString{String}}"
918998	"Tuple{typeof(Sockets.connect), Sockets.IPv4, UInt64}"
1971423	"Tuple{getfield(HTTP.ConnectionPool, Symbol("##getconnection#14")), Bool, Int64, Base.Iterators.Pairs{Symbol, Union{Nothing, Bool}, Tuple{Symbol, Symbol}, NamedTuple{(:require_ssl_verification, :iofunction), Tuple{Bool, Nothing}}}, Function, Type{Sockets.TCPSocket}, Base.SubString{String}, String}"
5413716	"Tuple{typeof(Base.tryparse_internal), Type{UInt64}, String, Int64, Int64, Int64, Bool}"
74610	"Tuple{getfield(Base, Symbol("##parse#348")), Nothing, Function, Type{UInt64}, String}"
623323	"Tuple{typeof(HTTP.ConnectionPool.global_sslconfig), Bool}"
2786205	"Tuple{Type{MbedTLS.SSLContext}}"
609902	"Tuple{typeof(MbedTLS.mbed_err), Int32}"
66319	"Tuple{typeof(MbedTLS.ssl_setup), MbedTLS.SSLContext, MbedTLS.SSLConfig}"
450419	"Tuple{typeof(MbedTLS.ssl_set_bio), MbedTLS.SSLContext, Ptr{Nothing}, Ptr{Nothing}, Ptr{Nothing}}"
692012	"Tuple{typeof(MbedTLS.hostname!), MbedTLS.SSLContext, Base.SubString{String}}"
530950	"Tuple{typeof(MbedTLS.ssl_handshake), MbedTLS.SSLContext}"
695959	"Tuple{typeof(MbedTLS.ssl_session_reset), MbedTLS.SSLContext}"
61188	"Tuple{typeof(MbedTLS.ssl_abandon), MbedTLS.SSLContext}"
53687	"Tuple{typeof(MbedTLS.handshake), MbedTLS.SSLContext}"
67503	"Tuple{getfield(HTTP.ConnectionPool, Symbol("##sslconnection#18")), Bool, MbedTLS.SSLConfig, Base.Iterators.Pairs{Symbol, Nothing, Tuple{Symbol}, NamedTuple{(:iofunction,), Tuple{Nothing}}}, Function, Sockets.TCPSocket, Base.SubString{String}}"
649772	"Tuple{Type{MbedTLS.Entropy}}"
772148	"Tuple{typeof(MbedTLS.crt_parse), String}"
90399	"Tuple{typeof(MbedTLS.ca_chain!), MbedTLS.SSLConfig}"
149614	"Tuple{getfield(MbedTLS, Symbol("##SSLConfig#46")), Nothing, Type{T} where T, Bool}"
296069	"Tuple{getfield(Base, Symbol("##open#310")), Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, getfield(Base, Symbol("##272#273")){Tuple{}}, String}"
509238	"Tuple{typeof(MbedTLS.f_rng), MbedTLS.CtrDrbg, Ptr{UInt8}, UInt64}"
323307	"Tuple{typeof(Base.isopen), Sockets.TCPSocket}"
225802	"Tuple{typeof(Base.bytesavailable), Sockets.TCPSocket}"
509238	"Tuple{typeof(Base.eof), Sockets.TCPSocket}"
255803	"Tuple{typeof(Base.alloc_buf_hook), Sockets.TCPSocket, UInt64}"
517134	"Tuple{getfield(Base, Symbol("#readcb_specialized#489")), Sockets.TCPSocket, Int64, UInt64}"
186326	"Tuple{typeof(Base.min), UInt64, Int64}"
169746	"Tuple{Type{Int32}, UInt64}"
128691	"Tuple{getfield(HTTP, Symbol("#kw##request")), NamedTuple{(:iofunction,), Tuple{Nothing}}, typeof(HTTP.request), Type{HTTP.StreamRequest.StreamLayer}, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, HTTP.Messages.Request, Array{UInt8, 1}}"
834519	"Tuple{typeof(Base.println), HTTP.Messages.Request}"
460289	"Tuple{typeof(HTTP.Messages.issafe), String}"
115664	"Tuple{typeof(HTTP.Messages.isidempotent), String}"
320149	"Tuple{typeof(HTTP.IOExtras.startread), HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}"
648588	"Tuple{typeof(Base.iswritable), MbedTLS.SSLContext}"
372257	"Tuple{typeof(MbedTLS.ssl_close_notify), MbedTLS.SSLContext}"
236066	"Tuple{typeof(Base.close), MbedTLS.SSLContext}"
1061900	"Tuple{typeof(MbedTLS.ssl_read), MbedTLS.SSLContext, Ptr{UInt8}, UInt64}"
424760	"Tuple{typeof(MbedTLS.ssl_get_bytes_avail), MbedTLS.SSLContext}"
75793	"Tuple{typeof(MbedTLS.ssl_unsafe_read), MbedTLS.SSLContext, Ptr{UInt8}, UInt64}"
111322	"Tuple{typeof(Base.readavailable), MbedTLS.SSLContext}"
556215	"Tuple{typeof(HTTP.postcondition_error), String, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}, String, Int64, String, Int64}"
603191	"Tuple{typeof(MbedTLS.ssl_check_pending), MbedTLS.SSLContext}"
190273	"Tuple{typeof(MbedTLS.wait_for_encrypted_data), MbedTLS.SSLContext}"
105006	"Tuple{typeof(MbedTLS.wait_for_decrypted_data), MbedTLS.SSLContext}"
155929	"Tuple{typeof(HTTP.ConnectionPool.purge), HTTP.ConnectionPool.Connection{MbedTLS.SSLContext}}"
276726	"Tuple{typeof(HTTP.IOExtras.closewrite), HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}"
878337	"Tuple{typeof(HTTP.IOExtras.closeread), HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}"
68294	"Tuple{typeof(Base.close), HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}"
295279	"Tuple{typeof(Base.println), HTTP.Messages.Response}"
161061	"Tuple{getfield(HTTP.StreamRequest, Symbol("##request#1")), Nothing, Nothing, Int64, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, Type{HTTP.StreamRequest.StreamLayer}, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, HTTP.Messages.Request, Array{UInt8, 1}}"
1733779	"Tuple{typeof(Base.endswith), String, String}"
205274	"Tuple{typeof(Base._any), getfield(HTTP.Messages, Symbol("##4#5")), Array{Base.Pair{Base.SubString{String}, Base.SubString{String}}, 1}, Base.Colon}"
333571	"Tuple{typeof(HTTP.Messages.bodylength), HTTP.Messages.Request}"
1628379	"Tuple{typeof(HTTP.Messages.bodylength), HTTP.Messages.Response}"
80530	"Tuple{typeof(HTTP.IOExtras.startwrite), HTTP.Streams.Stream{HTTP.Messages.Response, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}}"
1699040	"Tuple{typeof(HTTP.Messages.hasheader), HTTP.Messages.Request, String}"
123559	"Tuple{typeof(HTTP.Messages.ischunked), HTTP.Messages.Request}"
2030637	"Tuple{typeof(MbedTLS.ssl_write), MbedTLS.SSLContext, Ptr{UInt8}, UInt64}"
346203	"Tuple{typeof(MbedTLS.ssl_unsafe_write), MbedTLS.SSLContext, Ptr{UInt8}, UInt64}"
5106200	"Tuple{typeof(Base.string), Base.SubString{String}, String, Base.SubString{String}, String}"
326860	"Tuple{typeof(HTTP.Messages.writeheaders), HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, HTTP.Messages.Request}"
573584	"Tuple{typeof(Base.check_open), Sockets.TCPSocket}"
675827	"Tuple{getfield(MbedTLS, Symbol("##37#38")){MbedTLS.SSLContext}}"
847152	"Tuple{getfield(HTTP.StreamRequest, Symbol("##2#3")){HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, HTTP.Messages.Request, Array{UInt8, 1}}}"
545161	"Tuple{typeof(Base.write), HTTP.Streams.Stream{HTTP.Messages.Response, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}, UInt8}"
41845	"Tuple{typeof(HTTP.StreamRequest.writechunk), HTTP.Streams.Stream{HTTP.Messages.Response, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}, HTTP.Messages.Request, UInt8}"
1252568	"Tuple{typeof(Base.write), HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, String, String}"
106585	"Tuple{typeof(Base.unsafe_write), HTTP.Streams.Stream{HTTP.Messages.Response, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}, Ptr{UInt8}, UInt64}"
63556	"Tuple{typeof(HTTP.StreamRequest.writebody), HTTP.Streams.Stream{HTTP.Messages.Response, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}, HTTP.Messages.Request, Array{UInt8, 1}}"
993607	"Tuple{typeof(Base.task_done_hook), Task}"
1438105	"Tuple{typeof(Base.unalias), Array{UInt8, 1}, Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}"
195011	"Tuple{typeof(Base.copyto!), Array{UInt8, 1}, Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}"
1021635	"Tuple{typeof(HTTP.Parsers.group), Int64, Base.Regex, String}"
517133	"Tuple{typeof(HTTP.Parsers.nextbytes), Base.Regex, String}"
62372	"Tuple{typeof(HTTP.Parsers.parse_status_line!), String, HTTP.Messages.Response}"
1167301	"Tuple{typeof(HTTP.Parsers.group), Int64, Base.Regex, Base.SubString{String}}"
640692	"Tuple{typeof(HTTP.Parsers.nextbytes), Base.Regex, Base.SubString{String}}"
6532462	"Tuple{typeof(Base.string), Base.SubString{String}, String, Base.SubString{String}}"
246330	"Tuple{typeof(HTTP.Messages.appendheader), HTTP.Messages.Response, Base.Pair{Base.SubString{String}, Base.SubString{String}}}"
529371	"Tuple{typeof(HTTP.Messages.parse_header_fields!), Base.SubString{String}, HTTP.Messages.Response}"
115269	"Tuple{typeof(HTTP.Messages.readheaders), HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, HTTP.Messages.Response}"
143297	"Tuple{typeof(HTTP.IOExtras.startread), HTTP.Streams.Stream{HTTP.Messages.Response, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}}"
1382049	"Tuple{typeof(Base.unsafe_read), MbedTLS.SSLContext, Ptr{UInt8}, UInt64}"
185142	"Tuple{typeof(HTTP.ConnectionPool.read_to_buffer), HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, Int64}"
56845	"Tuple{typeof(Base.readuntil), HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, Function, Int64}"
1396261	"Tuple{getfield(Base, Symbol("##Timer#448#449")), Float64, Type{T} where T, Int64}"
1458237	"Tuple{typeof(Base.readuntil), Base.GenericIOBuffer{Array{UInt8, 1}}, typeof(HTTP.Parsers.find_end_of_header)}"
963605	"Tuple{Type{HTTP.Parsers.ParseError}, Symbol, Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}"
225012	"Tuple{getfield(HTTP.Parsers, Symbol("##find_end_of_header#1")), Bool, Function, Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}"
416075	"Tuple{getfield(Base, Symbol("##parse#348")), Nothing, Function, Type{Int64}, Base.SubString{String}}"
1482318	"Tuple{typeof(HTTP.Parsers.parse_chunk_size), Base.SubArray{UInt8, 1, Array{UInt8, 1}, Tuple{Base.UnitRange{Int64}}, true}}"
274357	"Tuple{typeof(HTTP.Messages.readchunksize), HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, HTTP.Messages.Response}"
623718	"Tuple{typeof(Base.eof), HTTP.Streams.Stream{HTTP.Messages.Response, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}}"
1379681	"Tuple{typeof(Base.unsafe_read), HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}, Ptr{UInt8}, UInt64}"
155930	"Tuple{typeof(HTTP.Streams.http_unsafe_read), HTTP.Streams.Stream{HTTP.Messages.Response, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}, Ptr{UInt8}, UInt64}"
78951	"Tuple{typeof(Base.readbytes!), HTTP.Streams.Stream{HTTP.Messages.Response, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}, Base.GenericIOBuffer{Array{UInt8, 1}}, Int64}"
143692	"Tuple{typeof(Base.read), HTTP.Streams.Stream{HTTP.Messages.Response, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}}"
38687	"Tuple{typeof(HTTP.StreamRequest.readbody), HTTP.Streams.Stream{HTTP.Messages.Response, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}, HTTP.Messages.Response, Nothing}"
3386238	"Tuple{typeof(HTTP.Messages.ascii_lc_isequal), String, String}"
124349	"Tuple{typeof(HTTP.Messages.hasheader), HTTP.Messages.Response, String, String}"
113295	"Tuple{typeof(HTTP.Streams.isaborted), HTTP.Streams.Stream{HTTP.Messages.Response, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}}"
498580	"Tuple{typeof(HTTP.IOExtras.closewrite), HTTP.Streams.Stream{HTTP.Messages.Response, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}}"
1510346	"Tuple{typeof(Base.readavailable), HTTP.Streams.Stream{HTTP.Messages.Response, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}, Int64}"
165799	"Tuple{typeof(HTTP.IOExtras.closeread), HTTP.Streams.Stream{HTTP.Messages.Response, HTTP.ConnectionPool.Transaction{MbedTLS.SSLContext}}}"
439760	"Tuple{typeof(HTTP.URIs.absuri), HTTP.URIs.URI, HTTP.URIs.URI}"
33160	"Tuple{typeof(HTTP.URIs.absuri), Base.SubString{String}, HTTP.URIs.URI}"
1094665	"Tuple{typeof(HTTP.URIs.group), Int64, Base.Regex, Base.SubString{String}, Base.SubString{String}}"
821098	"Tuple{typeof(HTTP.postcondition_error), String, Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}, String, String, String, Base.SubString{String}}"
83294	"Tuple{getfield(HTTP.URIs, Symbol("##parse_uri_reference#6")), Bool, Function, Base.SubString{String}}"
145666	"Tuple{getfield(HTTP, Symbol("#kw##request")), NamedTuple{(:parent,), Tuple{HTTP.Messages.Response}}, typeof(HTTP.request), Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}}, String, HTTP.URIs.URI, Array{Base.Pair{Base.SubString{String}, Base.SubString{String}}, 1}, Array{UInt8, 1}}"
1157432	"Tuple{getfield(HTTP.MessageRequest, Symbol("##request#1")), Base.VersionNumber, String, HTTP.Messages.Response, Nothing, Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Function, Type{HTTP.MessageRequest.MessageLayer{HTTP.RetryRequest.RetryLayer{HTTP.ExceptionRequest.ExceptionLayer{HTTP.ConnectionRequest.ConnectionPoolLayer{HTTP.StreamRequest.StreamLayer}}}}}, String, HTTP.URIs.URI, Array{Base.Pair{Base.SubString{String}, Base.SubString{String}}, 1}, Array{UInt8, 1}}"
751620	"Tuple{getfield(HTTP.Messages, Symbol("##Request#3")), Base.VersionNumber, HTTP.Messages.Response, Type{T} where T, String, String, Array{Base.Pair{Base.SubString{String}, Base.SubString{String}}, 1}, Array{UInt8, 1}}"
278304	"Tuple{getfield(HTTP.ConnectionPool, Symbol("#isdeletable#10")), HTTP.ConnectionPool.Connection{MbedTLS.SSLContext}}"
292911	"Tuple{getfield(HTTP.ConnectionPool, Symbol("##4#5")){DataType, Base.SubString{String}, Base.SubString{String}, Int64, Bool, Int64}, HTTP.ConnectionPool.Connection{MbedTLS.SSLContext}}"
139350	"Tuple{typeof(HTTP.ConnectionPool.client_transaction), HTTP.ConnectionPool.Connection{MbedTLS.SSLContext}}"
5204495	"Tuple{typeof(Gumbo.elem_tag), Gumbo.CGumbo.Element}"
493842	"Tuple{Type{Base.Dict{AbstractString, AbstractString}}}"
2819760	"Tuple{typeof(Base.rehash!), Base.Dict{AbstractString, AbstractString}, Int64}"
110927	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{AbstractString, AbstractString}, String}"
195010	"Tuple{typeof(Base.setindex!), Base.Dict{AbstractString, AbstractString}, String, String}"
83294	"Tuple{typeof(Gumbo.attributes), Array{Ptr{Gumbo.CGumbo.Attribute}, 1}}"
568452	"Tuple{typeof(Gumbo.gumbo_to_jl), Gumbo.NullNode, Gumbo.CGumbo.Element}"
206854	"Tuple{typeof(Gumbo.document_from_gumbo), Gumbo.CGumbo.Output}"
470552	"Tuple{getfield(Gumbo, Symbol("##parsehtml#4")), Bool, Function, String}"
155535	"Tuple{Type{Gumbo.HTMLElement{:HTML}}, Array{Gumbo.HTMLNode, 1}, Gumbo.NullNode, Base.Dict{AbstractString, AbstractString}}"
335149	"Tuple{typeof(Base.in), Type{T} where T, Array{DataType, 1}}"
938736	"Tuple{typeof(Gumbo.gumbo_to_jl), Gumbo.HTMLElement{:HTML}, Gumbo.CGumbo.Element}"
113690	"Tuple{Type{Gumbo.HTMLElement{:head}}, Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:HTML}, Base.Dict{AbstractString, AbstractString}}"
1214277	"Tuple{typeof(Gumbo.gumbo_to_jl), Gumbo.HTMLElement{:head}, Gumbo.CGumbo.Element}"
154350	"Tuple{Type{Gumbo.HTMLElement{:meta}}, Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:head}, Base.Dict{AbstractString, AbstractString}}"
314623	"Tuple{typeof(Base.push!), Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:meta}}"
110532	"Tuple{Type{Gumbo.HTMLElement{:title}}, Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:head}, Base.Dict{AbstractString, AbstractString}}"
245540	"Tuple{typeof(Gumbo.gumbo_to_jl), Gumbo.HTMLElement{:title}, Gumbo.CGumbo.Text}"
480816	"Tuple{typeof(Base.push!), Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:title}}"
106585	"Tuple{Type{Gumbo.HTMLElement{:link}}, Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:head}, Base.Dict{AbstractString, AbstractString}}"
435813	"Tuple{typeof(Base.push!), Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:link}}"
185536	"Tuple{Type{Gumbo.HTMLElement{:script}}, Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:head}, Base.Dict{AbstractString, AbstractString}}"
345019	"Tuple{typeof(Gumbo.gumbo_to_jl), Gumbo.HTMLElement{:script}, Gumbo.CGumbo.Text}"
738988	"Tuple{typeof(Base.push!), Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:script}}"
260146	"Tuple{typeof(Base.push!), Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:head}}"
112901	"Tuple{Type{Gumbo.HTMLElement{:body}}, Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:HTML}, Base.Dict{AbstractString, AbstractString}}"
981764	"Tuple{typeof(Gumbo.gumbo_to_jl), Gumbo.HTMLElement{:body}, Gumbo.CGumbo.Element}"
125928	"Tuple{Type{Gumbo.HTMLElement{:span}}, Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:body}, Base.Dict{AbstractString, AbstractString}}"
1423499	"Tuple{typeof(Gumbo.gumbo_to_jl), Gumbo.HTMLElement{:span}, Gumbo.CGumbo.Element}"
109742	"Tuple{Type{Gumbo.HTMLElement{:svg}}, Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:span}, Base.Dict{AbstractString, AbstractString}}"
888601	"Tuple{typeof(Gumbo.gumbo_to_jl), Gumbo.HTMLElement{:svg}, Gumbo.CGumbo.Element}"
136192	"Tuple{Type{Gumbo.HTMLElement{:path}}, Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:svg}, Base.Dict{AbstractString, AbstractString}}"
441735	"Tuple{typeof(Base.push!), Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:path}}"
262120	"Tuple{typeof(Base.push!), Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:svg}}"
279489	"Tuple{typeof(Base.push!), Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:span}}"
177641	"Tuple{Type{Gumbo.HTMLElement{:script}}, Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:body}, Base.Dict{AbstractString, AbstractString}}"
301201	"Tuple{typeof(Base.push!), Array{Gumbo.HTMLNode, 1}, Gumbo.HTMLElement{:body}}"
113690	"Tuple{typeof(AbstractTrees.get_primary), DataType}"
2136433	"Tuple{typeof(AbstractTrees.getnode), Gumbo.HTMLElement{:HTML}, AbstractTrees.ImplicitNodeStack{Any, Int64}}"
542792	"Tuple{typeof(AbstractTrees.childstates), AbstractTrees.ImplicitChildStates{Gumbo.HTMLElement{:HTML}, AbstractTrees.ImplicitNodeStack{Any, Int64}}}"
177642	"Tuple{typeof(Base.iterate), AbstractTrees.ImplicitChildStates{Gumbo.HTMLElement{:HTML}, AbstractTrees.ImplicitNodeStack{Any, Int64}}, Int64}"
1546663	"Tuple{typeof(Base.throw_boundserror), Array{Int64, 1}, Tuple{Base.UnitRange{Int64}}}"
68293	"Tuple{typeof(AbstractTrees.parentstate), Gumbo.HTMLElement{:HTML}, AbstractTrees.ImplicitIndexStack{Int64}}"
83294	"Tuple{typeof(AbstractTrees.parentstate), Gumbo.HTMLElement{:HTML}, AbstractTrees.ImplicitNodeStack{Any, Int64}}"
244751	"Tuple{typeof(Base.nextind), AbstractTrees.ImplicitChildStates{Gumbo.HTMLElement{:HTML}, AbstractTrees.ImplicitNodeStack{Any, Int64}}, Int64}"
128691	"Tuple{typeof(AbstractTrees.children), Gumbo.HTMLElement{:HTML}, AbstractTrees.ImplicitNodeStack{Any, Int64}}"
40660	"Tuple{typeof(AbstractTrees.nextsibling), Gumbo.HTMLElement{:HTML}, AbstractTrees.ImplicitNodeStack{Any, Int64}}"
4676703	"Tuple{typeof(Base.vcat), Array{Any, 1}, Array{Any, 1}}"
3810602	"Tuple{typeof(Base.vcat), Array{Int64, 1}, Array{Int64, 1}}"
86058	"Tuple{typeof(AbstractTrees.joinstate), Gumbo.HTMLElement{:HTML}, AbstractTrees.ImplicitNodeStack{Any, Int64}, AbstractTrees.ImplicitNodeStack{Any, Int64}}"
95531	"Tuple{typeof(AbstractTrees.stepstate), AbstractTrees.PreOrderDFS{Gumbo.HTMLElement{:HTML}}, AbstractTrees.ImplicitNodeStack{Any, Int64}}"
91584	"Tuple{typeof(Cascadia.matchAllInto), Cascadia.Selector, Gumbo.HTMLElement{:HTML}, Array{Gumbo.HTMLNode, 1}}"
33160	"Tuple{typeof(Base.eachmatch), Cascadia.Selector, Gumbo.HTMLElement{:HTML}}"
122375	"Tuple{Cascadia.Selector, Gumbo.HTMLElement{:HTML}}"
325281	"Tuple{getfield(Cascadia, Symbol("##25#26")){Cascadia.Selector, Cascadia.Selector}, Gumbo.HTMLElement{:HTML}}"
232513	"Tuple{getfield(Cascadia, Symbol("##5#6")), Gumbo.HTMLElement{:HTML}}"
208433	"Tuple{typeof(Base.iterate), Array{Gumbo.HTMLNode, 1}, Int64}"
147245	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:head}, Int64}, Int64}"
130271	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:head}, Int64}, Int64, Int64}"
589769	"Tuple{typeof(AbstractTrees.update_state!), Gumbo.HTMLElement{:HTML}, AbstractTrees.ImplicitNodeStack{Any, Int64}, Array{Gumbo.HTMLNode, 1}, Int64}"
50135	"Tuple{typeof(AbstractTrees.update_state!), Gumbo.HTMLElement{:HTML}, AbstractTrees.ImplicitNodeStack{Any, Int64}, Array{Gumbo.HTMLNode, 1}, Int64, AbstractTrees.RegularTree}"
93163	"Tuple{Cascadia.Selector, Gumbo.HTMLElement{:head}}"
116453	"Tuple{getfield(Cascadia, Symbol("##25#26")){Cascadia.Selector, Cascadia.Selector}, Gumbo.HTMLElement{:head}}"
196195	"Tuple{getfield(Cascadia, Symbol("##5#6")), Gumbo.HTMLElement{:head}}"
98689	"Tuple{typeof(AbstractTrees.childstates), Gumbo.HTMLElement{:HTML}, Gumbo.HTMLElement{:head}}"
192643	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:meta}, Int64}, Int64}"
188695	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:meta}, Int64}, Int64, Int64}"
84084	"Tuple{typeof(AbstractTrees.children), Gumbo.HTMLElement{:head}}"
111716	"Tuple{typeof(Base.getindex), Array{Gumbo.HTMLNode, 1}, Int64}"
122375	"Tuple{Cascadia.Selector, Gumbo.HTMLElement{:meta}}"
124744	"Tuple{getfield(Cascadia, Symbol("##25#26")){Cascadia.Selector, Cascadia.Selector}, Gumbo.HTMLElement{:meta}}"
196984	"Tuple{getfield(Cascadia, Symbol("##5#6")), Gumbo.HTMLElement{:meta}}"
104611	"Tuple{typeof(AbstractTrees.childstates), Gumbo.HTMLElement{:HTML}, Gumbo.HTMLElement{:meta}}"
99874	"Tuple{typeof(Base.nextind), Array{Gumbo.HTMLNode, 1}, Int64}"
95531	"Tuple{typeof(AbstractTrees.children), Gumbo.HTMLElement{:HTML}, Gumbo.HTMLElement{:head}}"
135402	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:title}, Int64}, Int64}"
125533	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:title}, Int64}, Int64, Int64}"
168168	"Tuple{Cascadia.Selector, Gumbo.HTMLElement{:title}}"
146850	"Tuple{getfield(Cascadia, Symbol("##25#26")){Cascadia.Selector, Cascadia.Selector}, Gumbo.HTMLElement{:title}}"
189484	"Tuple{getfield(Cascadia, Symbol("##5#6")), Gumbo.HTMLElement{:title}}"
133428	"Tuple{typeof(AbstractTrees.childstates), Gumbo.HTMLElement{:HTML}, Gumbo.HTMLElement{:title}}"
150798	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLText, Int64}, Int64}"
129086	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLText, Int64}, Int64, Int64}"
123165	"Tuple{typeof(AbstractTrees.children), Gumbo.HTMLElement{:title}}"
116059	"Tuple{Cascadia.Selector, Gumbo.HTMLText}"
135797	"Tuple{getfield(Cascadia, Symbol("##25#26")){Cascadia.Selector, Cascadia.Selector}, Gumbo.HTMLText}"
133428	"Tuple{getfield(Cascadia, Symbol("##5#6")), Gumbo.HTMLText}"
147245	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:link}, Int64}, Int64}"
124744	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:link}, Int64}, Int64, Int64}"
102637	"Tuple{Cascadia.Selector, Gumbo.HTMLElement{:link}}"
183563	"Tuple{getfield(Cascadia, Symbol("##25#26")){Cascadia.Selector, Cascadia.Selector}, Gumbo.HTMLElement{:link}}"
193037	"Tuple{getfield(Cascadia, Symbol("##5#6")), Gumbo.HTMLElement{:link}}"
120402	"Tuple{typeof(AbstractTrees.childstates), Gumbo.HTMLElement{:HTML}, Gumbo.HTMLElement{:link}}"
306332	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:script}, Int64}, Int64}"
133823	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:script}, Int64}, Int64, Int64}"
155140	"Tuple{Cascadia.Selector, Gumbo.HTMLElement{:script}}"
123165	"Tuple{getfield(Cascadia, Symbol("##25#26")){Cascadia.Selector, Cascadia.Selector}, Gumbo.HTMLElement{:script}}"
330018	"Tuple{getfield(Cascadia, Symbol("##5#6")), Gumbo.HTMLElement{:script}}"
516344	"Tuple{getfield(Cascadia, Symbol("##7#8")){getfield(Cascadia, Symbol("##11#12")){String}}, Gumbo.HTMLElement{:script}}"
343835	"Tuple{getfield(Cascadia, Symbol("##11#12")){String}, String}"
147245	"Tuple{typeof(AbstractTrees.childstates), Gumbo.HTMLElement{:HTML}, Gumbo.HTMLElement{:script}}"
90400	"Tuple{typeof(AbstractTrees.children), Gumbo.HTMLElement{:script}}"
185931	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:body}, Int64}, Int64}"
133033	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:body}, Int64}, Int64, Int64}"
106190	"Tuple{typeof(AbstractTrees.children), Gumbo.HTMLElement{:HTML}, Gumbo.HTMLElement{:HTML}}"
93953	"Tuple{Cascadia.Selector, Gumbo.HTMLElement{:body}}"
126718	"Tuple{getfield(Cascadia, Symbol("##25#26")){Cascadia.Selector, Cascadia.Selector}, Gumbo.HTMLElement{:body}}"
198958	"Tuple{getfield(Cascadia, Symbol("##5#6")), Gumbo.HTMLElement{:body}}"
118032	"Tuple{typeof(AbstractTrees.childstates), Gumbo.HTMLElement{:HTML}, Gumbo.HTMLElement{:body}}"
130270	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:span}, Int64}, Int64}"
131060	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:span}, Int64}, Int64, Int64}"
88426	"Tuple{typeof(AbstractTrees.children), Gumbo.HTMLElement{:body}}"
93558	"Tuple{Cascadia.Selector, Gumbo.HTMLElement{:span}}"
118823	"Tuple{getfield(Cascadia, Symbol("##25#26")){Cascadia.Selector, Cascadia.Selector}, Gumbo.HTMLElement{:span}}"
228565	"Tuple{getfield(Cascadia, Symbol("##5#6")), Gumbo.HTMLElement{:span}}"
142903	"Tuple{typeof(AbstractTrees.childstates), Gumbo.HTMLElement{:HTML}, Gumbo.HTMLElement{:span}}"
133428	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:svg}, Int64}, Int64}"
143297	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:svg}, Int64}, Int64, Int64}"
100663	"Tuple{typeof(AbstractTrees.children), Gumbo.HTMLElement{:span}}"
95137	"Tuple{Cascadia.Selector, Gumbo.HTMLElement{:svg}}"
126323	"Tuple{getfield(Cascadia, Symbol("##25#26")){Cascadia.Selector, Cascadia.Selector}, Gumbo.HTMLElement{:svg}}"
178431	"Tuple{getfield(Cascadia, Symbol("##5#6")), Gumbo.HTMLElement{:svg}}"
108558	"Tuple{typeof(AbstractTrees.childstates), Gumbo.HTMLElement{:HTML}, Gumbo.HTMLElement{:svg}}"
128297	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:path}, Int64}, Int64}"
138560	"Tuple{typeof(Base.indexed_iterate), Tuple{Gumbo.HTMLElement{:path}, Int64}, Int64, Int64}"
241986	"Tuple{typeof(AbstractTrees.children), Gumbo.HTMLElement{:svg}}"
111322	"Tuple{Cascadia.Selector, Gumbo.HTMLElement{:path}}"
121585	"Tuple{getfield(Cascadia, Symbol("##25#26")){Cascadia.Selector, Cascadia.Selector}, Gumbo.HTMLElement{:path}}"
237645	"Tuple{getfield(Cascadia, Symbol("##5#6")), Gumbo.HTMLElement{:path}}"
110927	"Tuple{typeof(AbstractTrees.childstates), Gumbo.HTMLElement{:HTML}, Gumbo.HTMLElement{:path}}"
93953	"Tuple{typeof(AbstractTrees.children), Gumbo.HTMLElement{:HTML}, Gumbo.HTMLElement{:body}}"
134218	"Tuple{typeof(Base.getindex), Gumbo.HTMLElement{:script}, Int64}"
132639	"Tuple{typeof(Base.strip), String}"
139745	"Tuple{typeof(JSON.Parser.parse), Base.SubString{String}}"
2137617	"Tuple{typeof(JSON.Parser._count_before), String, Char, Int64}"
458315	"Tuple{typeof(JSON.Parser._error), String, JSON.Parser.MemoryParserState}"
178430	"Tuple{getfield(JSON.Parser, Symbol("##parse#1")), Type{T} where T, Type{Int64}, Function, Base.SubString{String}}"
1793782	"Tuple{typeof(JSON.Parser.read_four_hex_digits!), JSON.Parser.MemoryParserState}"
625692	"Tuple{typeof(JSON.Parser._error_expected_char), UInt8, JSON.Parser.MemoryParserState}"
369099	"Tuple{typeof(JSON.Parser.read_unicode_escape!), JSON.Parser.MemoryParserState}"
264093	"Tuple{typeof(JSON.Parser.predict_string), JSON.Parser.MemoryParserState}"
996371	"Tuple{typeof(Base.ht_keyindex), Base.Dict{UInt8, UInt8}, UInt8}"
280673	"Tuple{typeof(JSON.Parser.parse_string), JSON.Parser.MemoryParserState, Base.GenericIOBuffer{Array{UInt8, 1}}}"
65135	"Tuple{typeof(JSON.Parser.parse_string), JSON.Parser.MemoryParserState}"
1242305	"Tuple{typeof(JSON.Parser.hasleadingzero), JSON.Parser.MemoryParserState, Int64, Int64}"
857020	"Tuple{typeof(JSON.Parser.int_from_bytes), JSON.Parser.ParserContext{Base.Dict{String, Any}, Int64}, JSON.Parser.MemoryParserState, JSON.Parser.MemoryParserState, Int64, Int64}"
320149	"Tuple{typeof(JSON.Parser.number_from_bytes), JSON.Parser.ParserContext{Base.Dict{String, Any}, Int64}, JSON.Parser.MemoryParserState, Bool, JSON.Parser.MemoryParserState, Int64, Int64}"
141718	"Tuple{typeof(JSON.Parser.parse_number), JSON.Parser.ParserContext{Base.Dict{String, Any}, Int64}, JSON.Parser.MemoryParserState}"
1136510	"Tuple{Type{Base.Dict{String, Any}}}"
938341	"Tuple{typeof(JSON.Parser.parse_object), JSON.Parser.ParserContext{Base.Dict{String, Any}, Int64}, JSON.Parser.MemoryParserState}"
1636668	"Tuple{typeof(JSON.Parser.parse_array), JSON.Parser.ParserContext{Base.Dict{String, Any}, Int64}, JSON.Parser.MemoryParserState}"
2821338	"Tuple{typeof(JSON.Parser.parse_jsconstant), JSON.Parser.MemoryParserState}"
508054	"Tuple{typeof(JSON.Parser.parse_value), JSON.Parser.ParserContext{Base.Dict{String, Any}, Int64}, JSON.Parser.MemoryParserState}"
4249179	"Tuple{typeof(Base.rehash!), Base.Dict{String, Any}, Int64}"
236460	"Tuple{typeof(Base.ht_keyindex2!), Base.Dict{String, Any}, String}"
229750	"Tuple{typeof(Base.setindex!), Base.Dict{String, Any}, String, String}"
512792	"Tuple{typeof(Base.setindex!), Base.Dict{String, Any}, Base.Dict{String, Any}, String}"
826624	"Tuple{typeof(Base.ht_keyindex), Base.Dict{String, Any}, String}"
71057	"Tuple{typeof(Base.getindex), Base.Dict{String, Any}, String}"
73425	"Tuple{Type{String}, String}"
133823	"Tuple{typeof(Base.keys), Base.Dict{String, Any}}"
916629	"Tuple{typeof(Base.copyto!), Array{String, 1}, Base.KeySet{String, Base.Dict{String, Any}}}"
80136	"Tuple{typeof(Base.collect), Base.KeySet{String, Base.Dict{String, Any}}}"
151587	"Tuple{Type{Test.Threw}, ErrorException, Nothing, LineNumberNode}"
483579	"Tuple{typeof(Base.println), Test.Fail}"
51318	"Tuple{typeof(Test.record), Test.FallbackTestSet, Test.Fail}"
281463	"Tuple{typeof(Base.print), Test.Fail}"
1228488	"Tuple{typeof(Test.ip_has_file_and_func), Ptr{Nothing}, String, Tuple{Symbol, Symbol}}"
1198487	"Tuple{typeof(Test.ip_has_file_and_func), Ptr{Nothing}, String, Tuple{Symbol}}"
2455002	"Tuple{getfield(Test, Symbol("##1#2")){String, Tuple{Symbol}}, Base.StackTraces.StackFrame}"
204880	"Tuple{typeof(Test.ip_has_file_and_func), Base.InterpreterIP, String, Tuple{Symbol}}"
174878	"Tuple{typeof(Base.findnext), getfield(Test, Symbol("##4#6")), Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}, Int64}"
1064663	"Tuple{typeof(Base.throw_boundserror), Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}, Tuple{Base.UnitRange{Int64}}}"
1777597	"Tuple{getfield(Test, Symbol("##1#2")){String, Tuple{Symbol, Symbol}}, Base.StackTraces.StackFrame}"
118033	"Tuple{typeof(Test.ip_has_file_and_func), Base.InterpreterIP, String, Tuple{Symbol, Symbol}}"
176457	"Tuple{typeof(Test.scrub_backtrace), Array{Union{Ptr{Nothing}, Base.InterpreterIP}, 1}}"
283042	"Tuple{typeof(Test.record), Test.DefaultTestSet, Test.Fail}"
286594	"Tuple{typeof(Test.do_test_throws), Test.Threw, Any, Any}"
195010	"Tuple{typeof(Base.getindex), Type{String}, String, String}"
770568	"Tuple{getfield(InstagramScraper, Symbol("##1#2")){Array{InstagramScraper.InstagramProfile, 1}}}"
248303	"Tuple{getfield(HTTP.ConnectionPool, Symbol("##8#9")){DataType, Base.SubString{String}, Base.SubString{String}, Int64, Bool}, HTTP.ConnectionPool.Connection{MbedTLS.SSLContext}}"
1436921	"Tuple{typeof(Base.notify), Base.Condition, Array{InstagramScraper.InstagramProfile, 1}, Bool, Bool}"
268435	"Tuple{typeof(Base.print), Base.TTY, Char}"
1928000	"Tuple{typeof(Base.Printf.print_fixed), Base.TTY, Int64, Int32, Int32, Bool, Array{UInt8, 1}}"
403049	"Tuple{typeof(Base.Printf.fix_dec), Base.TTY, Float64, String, Int64, Int64, Char, Array{UInt8, 1}}"
1003871	"Tuple{typeof(Base.show), Base.TTY, InstagramScraper.InstagramProfile}"
198168	"Tuple{typeof(Base.getindex), Type{String}, String}"
223433	"Tuple{typeof(Base.length), Array{InstagramScraper.InstagramProfile, 1}}"
150009	"Tuple{typeof(Base.getindex), Array{InstagramScraper.InstagramProfile, 1}, Int64}"
